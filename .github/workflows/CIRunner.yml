name: .Net CI Runner
on:
  push:
    paths:
      - 'apis/poi/*'
      - '.github/workflows/CIRunner.yml'
    branches:
      - 'main'
  pull_request:
    paths:
      - 'apis/poi/*'
      - '.github/workflows/CIRunner.yml'
jobs:
  build:
    runs-on: ubuntu-latest   
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Restore dependencies
      run: dotnet restore 
    - name: Build
      run: dotnet build --no-restore apis/poi/web/poi.csproj
    - name: Test
      run: dotnet test --no-restore --verbosity normal apis/poi/tests/UnitTests/UnitTests.csproj
    - name: Create Issue
      if: failure() # OR Check a bool variable you create and toggle as needed
      uses: dacbd/create-issue-action@v1
      with:
        token: ${{ github.token }}
        title: Action workflow failed.
    - name: Build and push Container to ACR
      uses: azure/docker-login@v1
      with:
        login-server: openhack5tb2l2k6acr.azurecr.io
        username: "openhack5tb2l2k6acr"
        password: "ckPonxIqkKo=T3jU3w1TxEdFcQmrKihU"
    - run: |
         docker build web -t openhack5tb2l2k6acr.azurecr.io/devopsoh/api-poi:${{ github.sha }}
         docker push openhack5tb2l2k6acr.azurecr.io/devopsoh/api-poi:${{ github.sha }}
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Deploy to Azure App Services
      uses: Azure/webapps-deploy@v2
      with:
        app-name: openhack5tb2l2k6poi
        slot-name: staging
        images:  openhack5tb2l2k6acr.azurecr.io/devopsoh/api-poi:${{ github.sha }}
  validate_staging_slot:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: POI Healthcheck
      id: poi-health-check
      uses: satak/webrequest-action@master
      with:
        url: https://openhack5tb2l2k6poi-staging.azurewebsites.net/api/healthcheck/poi
        method: GET
    - name: Check the health POI API 
      shell: pwsh
      run: |
        $output = '${{ steps.poi-health-check.outputs.output }}' | ConvertFrom-Json
        Write-Host " Status code is $($output.statusCode) "
        if($($output.statusCode) -eq 200) {
        Write-host "Healthy"
        #az webapp deployment slot swap --name openhackggp0ljh0poi --resource-group openhackggp0ljh0rg --slot staging --target-slot production
        }
        else {
        Write-Error "POI API is not healthy"
        }

   
        
